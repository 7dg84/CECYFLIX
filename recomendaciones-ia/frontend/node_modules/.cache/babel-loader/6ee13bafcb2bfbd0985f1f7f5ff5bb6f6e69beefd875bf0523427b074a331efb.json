{"ast":null,"code":"import React,{useState,useEffect}from'react';import'./App.css';// <-- Esto importa los estilos\nimport{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";function App(){const[peliculas,setPeliculas]=useState([]);const[peliculasFiltradas,setPeliculasFiltradas]=useState([]);const[busqueda,setBusqueda]=useState('');const[modoDescripcion,setModoDescripcion]=useState(false);const[recomendacion,setRecomendacion]=useState('');// Cargar películas al iniciar la app\nuseEffect(()=>{fetch('/api/peliculas').then(res=>res.json()).then(data=>{setPeliculas(data);setPeliculasFiltradas(data);}).catch(err=>console.error('Error al obtener películas:',err));},[]);const handleBuscar=e=>{e.preventDefault();if(!busqueda){setPeliculasFiltradas(peliculas);setRecomendacion('');return;}if(modoDescripcion){handleBuscarPorDescripcion();}else{const filtradas=peliculas.filter(p=>p.titulo.toLowerCase().includes(busqueda.toLowerCase())||p.genero.toLowerCase().includes(busqueda.toLowerCase()));setPeliculasFiltradas(filtradas);setRecomendacion('');}};const handleBuscarPorDescripcion=async()=>{try{const res=await fetch('/api/recomendaciones',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({prompt:`Dame una recomendación basada en esta descripción:\n${busqueda}. Usa solo películas de este catálogo:\n${peliculas.map(p=>p.titulo).join(', ')}.`})});const data=await res.json();setRecomendacion(data.recomendacion);const seleccionadas=peliculas.filter(p=>data.recomendacion.toLowerCase().includes(p.titulo.toLowerCase()));if(seleccionadas.length>0){setPeliculasFiltradas(seleccionadas);}}catch(err){console.error('Error con IA:',err);}};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"h1\",{className:\"titulo\",children:\"Cat\\xE1logo de Pel\\xEDculas\"}),/*#__PURE__*/_jsxs(\"form\",{className:\"buscador\",onSubmit:handleBuscar,children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:modoDescripcion?'Describe la peli que buscas...':'Busca por título o género',value:busqueda,onChange:e=>setBusqueda(e.target.value)}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"boton-modo\",onClick:()=>setModoDescripcion(!modoDescripcion),children:modoDescripcion?'Buscar por título/género':'Buscar por descripción'}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"boton-buscar\",children:\"Buscar\"})]}),recomendacion&&/*#__PURE__*/_jsxs(\"div\",{className:\"bloque-recomendaciones\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"IA sugiere:\"}),/*#__PURE__*/_jsx(\"p\",{children:recomendacion})]}),/*#__PURE__*/_jsx(\"div\",{className:\"grid\",children:peliculasFiltradas.map((p,i)=>{var _p$descripcion;return/*#__PURE__*/_jsxs(\"div\",{className:\"tarjeta\",children:[/*#__PURE__*/_jsx(\"img\",{src:p.poster,alt:p.titulo}),/*#__PURE__*/_jsxs(\"div\",{className:\"info\",children:[/*#__PURE__*/_jsx(\"h3\",{children:p.titulo}),/*#__PURE__*/_jsx(\"p\",{children:p.genero}),/*#__PURE__*/_jsxs(\"span\",{children:[(_p$descripcion=p.descripcion)===null||_p$descripcion===void 0?void 0:_p$descripcion.slice(0,60),\"...\"]})]})]},i);})})]});}export default App;","map":{"version":3,"names":["React","useState","useEffect","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","App","peliculas","setPeliculas","peliculasFiltradas","setPeliculasFiltradas","busqueda","setBusqueda","modoDescripcion","setModoDescripcion","recomendacion","setRecomendacion","fetch","then","res","json","data","catch","err","console","error","handleBuscar","e","preventDefault","handleBuscarPorDescripcion","filtradas","filter","p","titulo","toLowerCase","includes","genero","method","headers","body","JSON","stringify","prompt","map","join","seleccionadas","length","children","className","onSubmit","type","placeholder","value","onChange","target","onClick","i","_p$descripcion","src","poster","alt","descripcion","slice"],"sources":["C:/Users/uriel/Downloads/Practica4_2/recomendaciones-ia/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css'; // <-- Esto importa los estilos\n\nfunction App() {\n    const [peliculas, setPeliculas] = useState([]);\n    const [peliculasFiltradas, setPeliculasFiltradas] = useState([]);\n    const [busqueda, setBusqueda] = useState('');\n    const [modoDescripcion, setModoDescripcion] = useState(false);\n    const [recomendacion, setRecomendacion] = useState('');\n\n    // Cargar películas al iniciar la app\n    useEffect(() => {\n        fetch('/api/peliculas')\n            .then(res => res.json())\n            .then(data => {\n                setPeliculas(data);\n                setPeliculasFiltradas(data);\n            })\n            .catch(err => console.error('Error al obtener películas:', err));\n    }, []);\n\n    const handleBuscar = (e) => {\n        e.preventDefault();\n        if (!busqueda) {\n            setPeliculasFiltradas(peliculas);\n            setRecomendacion('');\n            return;\n        }\n        if (modoDescripcion) {\n            handleBuscarPorDescripcion();\n        } else {\n            const filtradas = peliculas.filter(p =>\n                p.titulo.toLowerCase().includes(busqueda.toLowerCase()) ||\n                p.genero.toLowerCase().includes(busqueda.toLowerCase())\n            );\n            setPeliculasFiltradas(filtradas);\n            setRecomendacion('');\n        }\n    };\n\n    const handleBuscarPorDescripcion = async () => {\n        try {\n            const res = await fetch('/api/recomendaciones', {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({\n                    prompt: `Dame una recomendación basada en esta descripción:\n${busqueda}. Usa solo películas de este catálogo:\n${peliculas.map(p => p.titulo).join(', ')}.`\n                })\n            });\n            const data = await res.json();\n            setRecomendacion(data.recomendacion);\n            const seleccionadas = peliculas.filter(p =>\n                data.recomendacion.toLowerCase().includes(p.titulo.toLowerCase())\n            );\n            if (seleccionadas.length > 0) {\n                setPeliculasFiltradas(seleccionadas);\n            }\n        } catch (err) {\n            console.error('Error con IA:', err);\n        }\n    };\n\n    return (\n        <>\n            <h1 className=\"titulo\">Catálogo de Películas</h1>\n            <form className=\"buscador\" onSubmit={handleBuscar}>\n                <input\n                    type=\"text\"\n                    placeholder={modoDescripcion ? 'Describe la peli que buscas...' : 'Busca por título o género'}\n                    value={busqueda}\n                    onChange={e => setBusqueda(e.target.value)}\n                />\n                <button\n                    type=\"button\"\n                    className=\"boton-modo\"\n                    onClick={() => setModoDescripcion(!modoDescripcion)}\n                >\n                    {modoDescripcion ? 'Buscar por título/género' : 'Buscar por descripción'}\n                </button>\n                <button type=\"submit\" className=\"boton-buscar\">Buscar</button>\n            </form>\n\n            {recomendacion && (\n                <div className=\"bloque-recomendaciones\">\n                    <h2>IA sugiere:</h2>\n                    <p>{recomendacion}</p>\n                </div>\n            )}\n\n            <div className=\"grid\">\n                {peliculasFiltradas.map((p, i) => (\n                    <div className=\"tarjeta\" key={i}>\n                        <img src={p.poster} alt={p.titulo} />\n                        <div className=\"info\">\n                            <h3>{p.titulo}</h3>\n                            <p>{p.genero}</p>\n                            <span>{p.descripcion?.slice(0, 60)}...</span>\n                        </div>\n                    </div>\n                ))}\n            </div>\n        </>\n    );\n}\n\nexport default App;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}